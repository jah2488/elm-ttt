Elm.Styles = Elm.Styles || {};
Elm.Styles.make = function (_elm) {
   "use strict";
   _elm.Styles = _elm.Styles || {};
   if (_elm.Styles.values) return _elm.Styles.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Common = Elm.Common.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var messageStyles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "border",_1: "2px solid #FEDD97"}
                                                      ,{ctor: "_Tuple2",_0: "background",_1: "#FEEDC9"}
                                                      ,{ctor: "_Tuple2",_0: "color",_1: "#FDB110"}
                                                      ,{ctor: "_Tuple2",_0: "margin",_1: "0 20px"}
                                                      ,{ctor: "_Tuple2",_0: "border-radius",_1: "20px"}
                                                      ,{ctor: "_Tuple2",_0: "padding",_1: "10px"}
                                                      ,{ctor: "_Tuple2",_0: "text-align",_1: "center"}]));
   var cellStyles = function (content) {
      var contentStyle = function () {
         var _p0 = content;
         switch (_p0)
         {case "X": return {ctor: "_Tuple2",_0: "color",_1: "#2BC4F2"};
            case "O": return {ctor: "_Tuple2",_0: "color",_1: "#A237FF"};
            default: return {ctor: "_Tuple2",_0: "color",_1: "#4A4A4A"};}
      }();
      return $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "margin",_1: "10px"}
                                            ,{ctor: "_Tuple2",_0: "width",_1: "150px"}
                                            ,{ctor: "_Tuple2",_0: "height",_1: "150px"}
                                            ,{ctor: "_Tuple2",_0: "font-size",_1: "6em"}
                                            ,contentStyle]));
   };
   var boardStyles = function (gameState) {
      var gameOverStyles = _U.eq(gameState,$Common.GameOver) ? _U.list([{ctor: "_Tuple2",_0: "opacity",_1: "0.5"}
                                                                       ,{ctor: "_Tuple2",_0: "pointer-events",_1: "none"}
                                                                       ,{ctor: "_Tuple2",_0: "-webkit-user-select",_1: "none"}
                                                                       ,{ctor: "_Tuple2",_0: "-moz-user-select",_1: "none"}
                                                                       ,{ctor: "_Tuple2",_0: "user-select",_1: "none"}]) : _U.list([]);
      var standardStyles = _U.list([{ctor: "_Tuple2",_0: "width",_1: "510px"}
                                   ,{ctor: "_Tuple2",_0: "margin",_1: "0 auto"}
                                   ,{ctor: "_Tuple2",_0: "overflow",_1: "hidden"}]);
      return $Html$Attributes.style(A2($List.append,standardStyles,gameOverStyles));
   };
   var titleStyles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "text-align",_1: "center"}]));
   return _elm.Styles.values = {_op: _op,titleStyles: titleStyles,boardStyles: boardStyles,cellStyles: cellStyles,messageStyles: messageStyles};
};