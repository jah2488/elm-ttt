Elm.AiTest = Elm.AiTest || {};
Elm.AiTest.make = function (_elm) {
   "use strict";
   _elm.AiTest = _elm.AiTest || {};
   if (_elm.AiTest.values) return _elm.AiTest.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Ai = Elm.Ai.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Common = Elm.Common.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $ElmTest = Elm.ElmTest.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var rankBoardTest = A2($ElmTest.test,"",$ElmTest.assert(true));
   var bestMoveTest = A2($ElmTest.test,"",A2($ElmTest.assertEqual,1,A2($Ai.bestMove,_U.list([$Common.Empty,$Common.X,$Common.X]),$Common.Human)));
   var isWinnerTest = A2($ElmTest.suite,
   "isWinnerTest returns true if the given player has won the game",
   _U.list([A2($ElmTest.test,"",$ElmTest.assert(A2($Ai.isWinner,_U.list([$Common.X,$Common.X,$Common.X]),$Common.Human)))
           ,A2($ElmTest.test,"",$ElmTest.assert(A2($Ai.isWinner,_U.list([$Common.O,$Common.O,$Common.O]),$Common.Computer)))
           ,A2($ElmTest.test,"",$ElmTest.assert($Basics.not(A2($Ai.isWinner,_U.list([$Common.X,$Common.X,$Common.X]),$Common.Computer))))]));
   var aiSuite = A2($ElmTest.suite,"Ai",_U.list([isWinnerTest,bestMoveTest,rankBoardTest]));
   return _elm.AiTest.values = {_op: _op,isWinnerTest: isWinnerTest,bestMoveTest: bestMoveTest,rankBoardTest: rankBoardTest,aiSuite: aiSuite};
};